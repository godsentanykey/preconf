altscreen on

# ============================
# Password
# ============================
# password SZnBqiqMtfa6k

# ============================
# Tab selection
# ============================
# 040126 To be able to select windows with n > 9 -> press "C-a - #" instead of just "C-a #"
  bind - command -c select_1n
  bind -c select_1n 0 select 10
  bind -c select_1n 1 select 11
  bind -c select_1n 2 select 12
  bind -c select_1n 3 select 13
  bind -c select_1n 4 select 14
  bind -c select_1n 5 select 15
  bind -c select_1n 6 select 16
  bind -c select_1n 7 select 17
  bind -c select_1n 8 select 18
  bind -c select_1n 9 select 19
  bind -c select_1n - command -c select_2n
  bind -c select_2n 0 select 20
  bind -c select_2n 1 select 21
  bind -c select_2n 2 select 22
  bind -c select_2n 3 select 23
  bind -c select_2n 4 select 24
  bind -c select_2n 5 select 25
  bind -c select_2n 6 select 26
  bind -c select_2n 7 select 27
  bind -c select_2n 8 select 28
  bind -c select_2n 9 select 29
  bind -c select_2n - select -
  bind -c select_2n - command -c select_3n
  bind -c select_3n 0 select 30
  bind -c select_3n 1 select 31
  bind -c select_3n 2 select 32
  bind -c select_3n 3 select 33
  bind -c select_2n 4 select 34
  bind -c select_3n 5 select 35
  bind -c select_3n 6 select 36
  bind -c select_3n 7 select 37
  bind -c select_3n 8 select 38
  bind -c select_3n 9 select 39
  bind -c select_3n - select -
  
bind ^b meta

# escape ^aa  # default
# escape ^pp  # suggested binding for emacs users

  autodetach            on              # default: on
  crlf                  off             # default: off
  deflogin              off             # default: on
# defsilence            off             # default: off
# hardcopy_append       on              # default: off
  hardcopy_append       off             # default: off
# nethack               on              # default: off
# don't display the copyright page
  startup_message       off             # default: on
# no annoying audible bell, please
  vbell                 off

   defnonblock 1
#  blankerprg rain -d 100
#  idle 120 blanker

# ===============================================================
# xterm tweaks
# ===============================================================
#  termcap  xterm hs@:cs=\E[%i%d;%dr:im=\E[4h:ei=\E[4l
#  terminfo xterm hs@:cs=\E[%i%p1%d;%p2%dr:im=\E[4h:ei=\E[4l

truecolor on

# 80/132 column switching must be enabled for ^AW to work change init sequence to not switch width
termcapinfo  xterm Z0=\E[?3h:Z1=\E[?3l:is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l

# Make the output buffer large for (fast) xterms.
termcapinfo xterm* OL=10000

# tell screen that xterm can switch to dark background and has function keys.
termcapinfo xterm 'VR=\E[?5h:VN=\E[?5l'
termcapinfo xterm 'k1=\E[11~:k2=\E[12~:k3=\E[13~:k4=\E[14~'
termcapinfo xterm 'kh=\EOH:kI=\E[2~:kD=\E[3~:kH=\EOF:kP=\E[5~:kN=\E[6~'

# special xterm hardstatus: use the window title.
 termcapinfo xterm 'hs:ts=\E]2;:fs=\007:ds=\E]2;screen\007'

#terminfo xterm 'vb=\E[?5h$<200/>\E[?5l'
#  termcapinfo xterm 'vi=\E[?25l:ve=\E[34h\E[?25h:vs=\E[34l'

# emulate part of the 'K' charset
#  termcapinfo   xterm 'XC=K%,%\E(B,[\304,\\\\\326,]\334,{\344,|\366,}\374,~\337'

# xterm-52 tweaks:
# - uses background color for delete operations
#  termcapinfo xterm* be

termcap  xterm        'AF=\E[3%dm:AB=\E[4%dm'
terminfo xterm        'AF=\E[3%p1%dm:AB=\E[4%p1%dm'
# Matthias Kopfermann <matthias_kopfermann@gmx.de> [020222] make the cursor show up in red:
#  termcapinfo linux "ve=\E[?25h\E[?17;0;64c" # red

termcapinfo xterm* ti@:te@

# ===============================================================
# VARIABLES - Number values
# ===============================================================
  defscrollback         5000            # default: 100
  msgminwait            3               # default: 1
  silencewait           15              # default: 30
#
# ===============================================================
# VARIABLES - Paths and Files (esp. programs)
# ===============================================================
# bufferfile:   The file to use for commands
#               "readbuf" ('<') and  "writebuf" ('>'):
  bufferfile            $HOME/.screen_exchange
#
# hardcopydir:  The directory which contains all hardcopies.
  hardcopydir           $HOME/.hardcopy
# hardcopydir           ~/.screen
#
# ===============================================================
# VARIABLES - Strings
# ===============================================================
#
# some notes on COLOR before explaining its use in
# the commands caption, hardstatus, and sorendition.
#
# COLOR:  colors codes are combinations of
# [attribute modifier] [color description]
# the manual talks of "attribute/color modifiers".
# see the manual, section "STRING ESCAPES".
#
# Color table:
# 0 Black             .    leave color unchanged
# 1 Red               b    blue
# 2 Green             c    cyan
# 3 Brown / yellow    d    default color
# 4 Blue              g    green           b    bold
# 5 Purple            k    blacK           B    blinking
# 6 Cyan              m    magenta         d    dim
# 7 White             r    red             r    reverse
# 8 unused/illegal    w    white           s    standout
# 9 transparent       y    yellow          u    underline
#
# note: "dim" is not mentioned in the manual.
#
# ===========================================
# CAPTION - shows a "caption" for the window.
# ===========================================
# a "caption" is another line which can show information - in addition to the hardstatus line.
#
# use caption to show window list:
# caption always "%{= kc}%?%-Lw%?%{= kY}%n*%f %t%?(%u)%?%{= kc}%?%+Lw%?"
#
# caption always '%{= wb}%50=%n%f %t%{= wb}'
# this basically just shows the current window number and title
# on its own; the "%50=" displays it in the middle of the line.
#
# "push right border: current time with seconds and current date"
# caption always "%=%c:%s %Y-%m-%d"
#
# caption always "%>%{wk}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%?%<"
# caption always "%-Lw%{= BW}%50>%n%f* %t%{-}%+Lw%<"
# caption always "%?%F%{.RW}%?%3n %t%? [%h]%?"
# caption always "%{rk}%H %{gk}%c %{yk}%M%d %{wk}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%?"
# caption always "%{kG}%?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{kG}%?%+Lw%?"
# caption always "%{rk}%H %{gk}%c %{yk}%M%d %{wk}%?%-Lw% ?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%?"
# caption always "%{rk}%H%{gk} | %c %{yk}%d.%m.%Y | %?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%? | %{rk} Load: %l %{wk}"
# caption always "%{=}%{+b kR}%H %{+b kY}%M %d %{+b kG}%0c %{+b kB}%?%-Lw%?%{+b kW}%n*%f %kt%?(%u)%?%{+bkB}%?%+Lw%? | %{kR} Load: %l %{kB}"
# caption always "%{=}%{+b kR}%H %{+b kY}%M %d %{+b kG}%0c %{+b kB}%?%-Lw%?%{+b kW}%n*%f %kt%?(%u)%?%{+bkB}%?%+Lw%? | %{kR} Load: %l %{kB}"
# cation always '%{-b}%{= wb}%-Lw%{= wr}%{+b}%n%f %t%{= wb}%{-b}%+Lw %{= wr} %=%c %Y-%m-%d'
#  caption splitonly "%{+b rk}%H%{gk} |%c %{yk}%d.%m.%Y | %?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%? | %{rk} Load: %l %{wk}"
  caption always '%{rk}[ %{R}%H %{r}]%{g}[%= %{wk}%?%-Lw%?%{=b kR}(%{W}%n*%f %t%?(%u)%?%{=b kR})%{= kw}%?%+Lw%?%?%= %{g}][%{Y}%l%{g}]%{=b C}[ %m/%d %c ]%{W}'
#
# ===============================
# Hardstatus Line and sorendition
# ===============================

#hardstatus alwayslastline
#hardstatus string '%{rk}[ %{R}%H %{r}]%{g}[%= %{wk}%?%-Lw%?%{=b kR}(%{W}%n*%f %t%?(%u)%?%{=b kR})%{= kw}%?%+Lw%?%?%= %{g}][%{Y}%l%{g}]%{=b C}[ %m/%d %c ]%{W}'
#hardstatus alwayslastline "%{rk}%H%{gk} | %c %{yk}%d.%m.%Y | %{rk} Load: %l %{wk} | %?%-Lw%?%{bw}%n*%f %t%?(%u)%?%{wk}%?%+Lw%?"

# 030331 backtick is a new command in screen version >=3.9.15
#
# 030330 use the hardstatus line to show the:
# * latest news of the IT ticker at heise.de [german!]:
#  backtick 1 1200 1200 heise
# * ipaddr of eth0
#  backtick 1 1200 1200 ipadr
# * external ipaddr of vpn-client
#  backtick 3 1200 1200 ipadr_vpn

# hardstatus alwayslastline "%{bw}%1`%= "
# hardstatus alwayslastline "%{bw}%1`%= %{+b ky}| %c:%s |%{+b rw} ip: %2` | vpn: %3`"
#                                  |                          |          |
#                                  heise (script in ~/bin/)   |          ipadr_vpn (script in ~/bin/)
#                                                             |
#                                                             ipadr (script in ~/bin/)
#
# "sorendition": set the colors for
# the "messages" and "text marking"
# (ie text you mark in copy mode):
# sorendition 10 99 # default!
# sorendition 02 40 # green  on black
# sorendition 02 34 # yellow on blue
# sorendition    rw # red    on white
# sorendition    kG # black  on bold green
#
#
# ===============================================================
# Messages
# ===============================================================
# There are two kinds of messages:  "activity" and "bell"
# They are also the names of the commands that set the
# respective messages.  In every message there can be "meta
# strings" which are replaced by values.  A meta string starts
# with a percent sign and is then followed by one
# of the following letters: aAcCdDfFhHlmMnstuwWyY
# The meta strings usually refer to the current
# date and time or to a window title or number.
# There are also some specials like embedded branches (with %?),
# color codes (with %{xy}) and padding (with %=, %<, %>).
# you can find their description in the manual in section
# "STRING ESCAPES":
#  %%      percent sign (the escape character itself)
#  %a      either 'am' or 'pm' - according to the current time
#  %A      either 'AM' or 'PM' - according to the current time
#  %c      current time HH:MM in 24h format
#  %C      current time HH:MM in 12h format
#  %d      day number - number of current day
#  %D      Day's name - the weekday name of the current day
#  %f      flags of the window
#  %F      sets %? to true if the window has the focus
#  %h      hardstatus of the window
#  %H      hostname of the system
#  %l      current load of the system
#  %m      month number
#  %M      month name
#  %n      window number
#  %s      seconds
#  %t      window title
#  %u      all other users on this window
#  %w      all window numbers and names.
#  %-w     all window numbers up to the current window
#  %+w     all window numbers after the current window
#  %W      all window numbers and names except the current one
#  %y      last two digits of the year number
#  %Y      full year number
#
# Older versions of screen used a single '%' character
# to display window titles - but since version 3.7 this is
# obsoleted by '%n' and it will vanish in future releases.
# So please update your screenrc to meet this convention!
#
# ===============================================================
# "~" stands for the "bell" character
#
# use %n to display the window number and %t for its title:
# activity              "activity in window #%n title: %t~"
# activity              "activity in window #%n title: %t~"
# activity              'Activity in window %n' # default
# activity              "%C -> %n%f %t activity!"
activity              "activity in %n (%t) [%C]~"
#
# pass on the "beep" (CTRL-G) by adding a '~':
# bell                  "%C -> %n%f %t bell!~"
# bell                  "bell     in %n (%t) [%w:%s]~"

# pow_detach_msg:       Message shown when session
#                       gets power detached.
# pow_detach_msg        "BYE"
# pow_detach_msg "Screen session of \$LOGNAME \$:cr:\$:nl:ended."
#
# vbell_msg:            Message shown when the
#                       "virtual bell" rings.
# vbell_msg             " *beep* "
#
# ==============================================================
#  BIND bind - defaults
# ==============================================================
# The "bind" command assign keys to (internal) commands
# SCREEN checks all the keys you type; you type the key
# which is known as the "command character" then SCREEN
# eats this key, too, and checks whether this key is
# "bound" to a command.  If so then SCREEN will execute it.
#
# The command "bind" allows you to chose which keys
# will be assigned to the commands.
#
# Some commands are bound to several keys -
# usually to both some letter and its corresponding
# control key combination, eg the command
# "(create) screen" is bound to both 'c' and '^C'.
#
# The following list shows the default bindings:
#
# break       ^B b
# clear       C
# colon       :
# copy        ^[ [
# detach      ^D d
# digraph     ^V
# displays    *
# dumptermcap .
# fit         F
# flow        ^F f
# focus       ^I
# hardcopy    h
# help        ?
# history     { }
# info        i
# kill        K k
# lastmsg     ^M m
# license     ,
# log         H
# login       L
# meta        x
# monitor     M
# next        ^@ ^N sp n
# number      N
# only        Q
# other       ^X
# pow_break   B
# pow_detach  D
# prev        ^H ^P p ^?
# quit        \
# readbuf     <
# redisplay   ^L l
# remove      X
# removebuf   =
# reset       Z
# screen      ^C c
# select      " '
# silence     _
# split       S
# suspend     ^Z z
# time        ^T t
# title       A
# vbell       ^G
# version     v
# width       W
# windows     ^W w
# wrap        ^R r
# writebuf    >
# xoff        ^S s
# xon         ^Q q



# 0   select 0
# 1   select 1
# 2   select 2
# 3   select 3
# 4   select 4
# 5   select 5
# 6   select 6
# 7   select 7
# 8   select 8
# 9   select 9
# ^]  paste .
# -   select -
# I   login on
# O   login off
# ]   paste .
#

#!!!!unbind!!!
bind X

# ===============================================================
# Key bindings
# ===============================================================
# Remove some default key bindings by binding
# them to "nothing" (empty right-hand-side):
#
# bind .  dumptermcap # default
# bind .
# bind ^\ quit        # default
# bind ^\
# bind \\ quit        # default
# bind \\
# bind h
# bind ^h ???         # default
# bind ^h
# bind }  history     # default
# bind }
#
# And here are the default bind commands if you need them:
#
# bind A title
# bind C clear
# bind D pow_detach
# bind F fit
# bind H log
# bind I login on
# bind K kill
# bind L login
# bind M monitor
# bind N number
# bind O login off
# bind Q only
# bind S split
# bind W width
# bind X remove
# bind Z reset
#
#
# ==============================================================
# KEY BINDING FAQ:
# ==============================================================
# FAQ: So many keys are bound to some command already -
#      which keys are unbound yet? Which are free for binding?
# A:   SCREEN does not have a command to show you
#      a table of currently unbound keys - sorry!
#      You simply have to read this setup file. ;-)
#
#      Summary:  Here is a table of the keys
#      which are not bound by default:
#      unbound:  -B--E-G--J-L---P-R-TUV--Y-
#        bound:  A-CD-F-HI-K-MNO-Q-S---WX-Z
#
# I suggest that you do not change the bindings for
# 'H' ("log") and 'M' ("monitor") as they are *really*
# useful and you might want to use them a lot;
# in this case it is recommended to use
# the defaults to avoid confusion.
# personally, I use 'A' ("title") quite often, too.
#
# If you are using "split windows"
# then you will also use the command
# associated with the keys FQSX a lot, too -
# so do not change their bindings, either!
#
# Anyway, I have bound the unbound uppercase letters
# to start programs in windows directly, ie without
# starting a new window with a shell within first.
# This simply saves shells and thus saves RAM -
# and also avoids that the title of windows is
# the name of your shell.  Also, you need not "exit"
# from a shell when you are done with some program.
# And when using "zombie mode" then the window will stay
# and you can resurrect them with the CTRL-SPACE command.
# cool! :-)
#
# enable "zombie mode":
# zombie z
# here the parameter 'z' defines the key
# which makes a zombie window go away.
#
# ==============================================================
# BIND and the Services:
# ==============================================================
# remove some stupid / dangerous key bindings
  bind k
  bind ^k
  bind .
  bind ^\
  bind \\
  bind ^h
#  bind h
  bind h  hardcopy
# make them better
  bind 'K' kill
  bind 'I' login on
  bind 'O' login off
  bind '}' history

# I am using the uppercase letters to start programs/services:
#
# the idea:
# bind <key> <command>
# this binds the key to start a windows with <command> inside.
#
# the command "screen" starts a "window" -
# and the default key is 'c' for "create".
# (i know - this *is* confusing at first.)
# with 'screen -t title" you can set a titlestring.
# the number following is the window number to be used.
# if the window number is already taken then
# the least highest available number is used.
#
#
# bind A title  # default!
#
# BUUG - Berlin Unix User Group - read some news about Unix
# bind B # unbound by default
# bind B screen -t 'buug' 4 links www.buug.de
#
# CHEM - LinuxTag event in Chemnitz -- 2002-03-09 + 2002-03-10
# bind C screen -t 'CHEM' 9 links www.tu-chemnitz.de/linux/tag/
# bind C screen -t 'CIT'  9 links http://www.math.fu-berlin.de/~guckes/cit/
# bind C screen -t 'CIT'  9 links http://www.computerinfotag.de
# NOTE:  This overrides the default binding for the "clear" command.
#
# DICT - Dictionary English<->German
# bind D pow_detach !
# bind D screen -t 'DICT' 4 links dict.tu-chemnitz.de
# Note: this overrides the default binding for the
# command "pow_detach".  I hardly ever use that one.
#
# 030407 showman -> echo -n "What manpage?"; read X; man $X; screen -X eval 'focus bottom' remove
#  bindkey "^B" eval split "focus bottom" "screen $HOME/bin/showman"
#
# 030507 call "date" and write it to buffer so you are
# able to insert it via screen->paste [bind paste to "<ctrl>+<a> <P>"!]
#
# $ cat $HOME/bin/showdate
# date +%Y%m%d_%Hh%Mm%Ss > $HOME/.date; cat $HOME/.date | tr -d '\n' > .date; screen -X bufferfile $HOME/.date; 
# screen -X readbuf
# $
#
# and now we bind it :)
# 
# Yet another hack:
# Prepend/append register [/] to the paste if ^a^] is pressed.
# This lets me have autoindent mode in vi.
# register [ "\033:se noai\015a"
# register ] "\033:se ai\015a"
# bind ^] paste [.]

defutf8 on

defflow off
